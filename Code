/*
 * The Decoders
 * Joseph Murray
 * Jonathan Carreon
 * CIS 17A
 * Project 1B
 */

/***********************************************************************************
 * This program is to be used by a gym that needs to streamline their memberships.
 * It will allow users to choose from different membership and latter allow them
 * to add training sessions to their account.  They will also be able to add people
 * to their account.
 ***********************************************************************************/

#include <iostream>
#include <iomanip>
#include <string>
#include <fstream>

using namespace std;

// Global constants
/**********************************************************/
// Array to hold months (DONE)

string Months[4] = { "Three Months",
					 "Six Months",
					 "Nine Months",
					 "Twelve Months"};

// Array to hold activity (DONE)

string Activity[5] = { "Weight Training",
					   "Spinning",
					   "Yoga",
					   "Zumba",
					   "Crossfit" };

// Array to hold prices (Membership & Training) (DONE)

double MemberPrices[4] = { 17.00, 15.00, 13.00, 11.00 };
double TrainingPrices[5] = { 4.00, 4.25, 4.50, 5.50, 6.75 };

// Array to hold days and times (DONE)

string Days[5] = { "Monday & Wednesday @ 09:00 AM",
				   "Monday & Wednesday @ 12:00 PM",
				   "Tuesday & Thursday @ 07:00 AM",
				   "Tuesday & Thursday @ 06:00 PM",
				   "Tuesday & Thursday @ 06:00 AM" };

double MemberCost;   // Holds membership cost
double TrainingCost; // Holds final training cost

/**********************************************************/

// Function prototypes

void SelectionTableMembership(int sizeM);
void SelectionTableTraining(int sizeT);
void MemberOutput(int memberOption);
void TrainingOutput(int trainingOption, int Weeks);

int main()
{
	// Declares array size (DONE)

	const int sizeM = 4;
	const int sizeT = 5;
	
	// Variables for user choices (DONE)

	int trainingOption, Weeks, memberOption;
	double FinalPrice;
	char choice, LockIn, addTraining;
	string custName;	
	
	// Constants for menu choices (DONE)

	const int Weight_Training = 1,
			  Spinning = 2,
			  Yoga = 3,
			  Zumba = 4,
			  Crossfit = 5;

	const int Three_Months = 1,
			  Six_Months = 2,
			  Nine_Months = 3,
			  Twelve_Months = 4;

	// Introduction (DONE)

	cout << "Apply for a gym membership here!\n\n";
	
	cout << "Enter customer's name: ";
	getline(cin, custName);

	SelectionTableMembership(sizeM);

	// Swtich statement to allow for user selection (DONE)

	do
	{
		cout << "What membership would you like to have: ";
		cin >> memberOption;

		switch (memberOption)
		{
		case Three_Months:
			--memberOption;
			MemberOutput(memberOption);
			break;
		case Six_Months:
			--memberOption;
			MemberOutput(memberOption);
			break;
		case Nine_Months:
			--memberOption;
			MemberOutput(memberOption);
			break;
		case Twelve_Months:
			--memberOption;
			MemberOutput(memberOption);
			break;
		default:
			cout << "Sorry, " << memberOption << " is not an option.\n";
			break;
		}
	} while (memberOption > 3);

	// Allow user to select a training program

	cout << "Would you like to add training: (Type 'Y' for yes and 'N' for no.): ";
	cin >> addTraining;

	if (addTraining == 'y' || addTraining == 'Y')
	{
		// Displays the selection table 

		SelectionTableTraining(sizeT);

		// Allows user to choose training session

		cout << "\n\n----------------------------------------------------------------------\n\n";
		cout << "Which training session would you like to add to your account [1-5]: ";
		cin >> trainingOption;

		if (trainingOption > 0)
		{
			do
			{
				if (trainingOption < 6)
				{
					cout << "How many weeks would you like to purchase: ";
					cin >> Weeks;

					switch (trainingOption)
					{
					case Weight_Training:
						--trainingOption;
						TrainingOutput(trainingOption, Weeks);
						break;
					case Spinning:
						--trainingOption;
						TrainingOutput(trainingOption, Weeks);
						break;
					case Yoga:
						--trainingOption;
						TrainingOutput(trainingOption, Weeks);
						break;
					case Zumba:
						--trainingOption;
						TrainingOutput(trainingOption, Weeks);
						break;
					case Crossfit:
						--trainingOption;
						TrainingOutput(trainingOption, Weeks);
						break;
					default:
						cout << "Sorry, " << trainingOption << " is not an option.\n";
						break;
					}

					cout << "Do you want to lock in this rate (Type 'Y' for yes and 'N' for no.): ";
					cin >> LockIn;

					// Will allow user to lock in price to be added to membership price

					if (LockIn == 'n' || LockIn == 'N')
					{
						cout << "Would you like to make another choice (Type 'Y' for yes and 'N' for no.):  ";
						cin >> choice;
						if (choice == 'Y' || choice == 'y')
						{
							cout << "Which training session would you like to add to your account [1-5]: ";
							cin >> trainingOption;
						}
					}
					else
					{
						cout << "Type the letter M to go back to the main menu. ";
						cin >> choice;
					}
				}

				// Will display error message selection is out of range

				else
				{
					cout << "Sorry " << trainingOption << " is not an available choice.\n";
					cout << "Would you like to make another choice (Type 'Y' for yes and 'N' for no.):  ";
					cin >> choice;
					if (choice == 'Y' || choice == 'y')
					{
						cout << "Which training session would you like to add to your account [1-5]: ";
						cin >> trainingOption;
					}
				}

			} while (choice == 'Y' || choice == 'y');
		}
	}



	// Adds membership price to training cost for a final total (DONE)

	FinalPrice = MemberCost + TrainingCost;

	// Output to reciept (DONE)

	ofstream outputFile;
	outputFile.open("CustomerReciept.txt");

	// Generic output to file (DONE)

	outputFile << fixed << setprecision(2) << showpoint;
	outputFile << "\tSummary of Services\n\n";
	outputFile << "\tMember: " << custName << endl;
	outputFile << "\n\tSubscription: " << Months[memberOption];
	outputFile << "\t$" << MemberPrices[memberOption] << " per month";

	// Will only print if training was added (DONE)

	if (addTraining == 'y' || addTraining == 'Y')
	{
		// Adds membership price to training cost for a final total (DONE)

		FinalPrice = MemberCost + TrainingCost;

		outputFile << "\n\tTraining Sessions: Y\n";
		outputFile << "\n\t" << Activity[trainingOption];
		outputFile << "\t" << Days[trainingOption];
		outputFile << "\tRate: $" << TrainingPrices[trainingOption] << endl;
		outputFile << "\tWeeks: " << Weeks << endl << endl;
		outputFile << "\tFinal training cost: $" << TrainingCost;
	}
	else
	{
		FinalPrice = MemberCost;
		outputFile << "\n\tTraining Sessions: N\n";
	}

	outputFile << "\n\tTotal cost of membership: $" << FinalPrice;
	outputFile << "\n\n\tEnjoy working out here at the Gym.";

	// Close the file (DONE)

	outputFile.close();
	cout << "\nDetails have been outputted to a reciept.  Thank you for choosing our Gym!\n\n";
}

// Function that displays Membership Options table (DONE)

void SelectionTableMembership(int sizeM)
{
	int Counter = 1;

	cout << endl << setw(40) << "Membership Selection Menu\n\n";
	cout << setw(21) << "No. of Months" << setw(30) << "Prices (per month)\n";
	cout << setw(21) << "-------------";  
	cout << setw(30) << "------------------\n";
	cout << fixed << showpoint << setprecision(2);

	for (int count = 0; count < sizeM; count++)
	{
		cout << left;
		cout << Counter++ << ".\t" << setw(18) << Months[count]
			 << right << setw(16) << MemberPrices[count] << endl;
	}

	cout << endl;
}

// Function that displays Training Options table (DONE)

void SelectionTableTraining(int sizeT)
{
	int dayCounter = 1;

	
	cout << endl << endl << setw(60) << "Training Selection Menu\n\n";
	cout << setw(20) << "Activity" << setw(30) << "Day & Time" << setw(28) << "Price per week\n";
	cout << "\t---------------"
		 << setw(35) << "-----------------------------"
		 << setw(20) << "--------------\n";
	cout << fixed << showpoint << setprecision(2);

	for (int count = 0; count < sizeT; count++)
	{
		cout << left;
		cout << dayCounter++ << ".\t" << setw(18) << Activity[count]
			<< right << setw(32) << Days[count]
			<< right << setw(10) << "$" << TrainingPrices[count] << endl;
	}
	cout << "\n6.\t" << setw(18) << "Type \"-1\" to exit Training Selection Menu\n\n";
}

// Function that output chosen membership option (DONE)

void MemberOutput(int memberOption)
{
	MemberCost = MemberPrices[memberOption] * ((memberOption + 1)*3);
	cout << "\n\tCost of Membership: $" << MemberCost << endl << endl;
}

// Function that output chosen training option (DONE)

void TrainingOutput(int trainingOption, int Weeks)
{
	// Calculate the cost of weeks chosen times price

	TrainingCost = Weeks * TrainingPrices[trainingOption];

	// Output to screen

	cout << "\n\t" << Activity[trainingOption]
		 << "\t" << Days[trainingOption]
		 << "\tRate: $" << TrainingPrices[trainingOption] << endl
		 << "\tWeeks: " << Weeks << endl << endl
		 << "\tFinal training cost: $" << TrainingCost
		 << endl << endl;
}
